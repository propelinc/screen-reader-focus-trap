{"version":3,"file":"main.umd.min.js","sources":["../src/focus-trap.ts"],"sourcesContent":["export class FocusTrap {\n  containerDomNode: HTMLElement | null\n  sourceDomNode: HTMLElement | null\n  initialFocusDomNode: HTMLElement | null\n  hiddenDomNodes: Element[] = []\n  inertDomNodes: HTMLElement[] = []\n\n  constructor({\n    containerDomNode,\n    sourceDomNode,\n    initialFocusDomNode,\n  }: {\n    containerDomNode: HTMLElement\n    sourceDomNode: HTMLElement\n    initialFocusDomNode?: HTMLElement\n  }) {\n    if (!containerDomNode) {\n      throw new Error('No containerDomNode provided.')\n    }\n\n    if (!sourceDomNode) {\n      throw new Error('No sourceDomNode provided.')\n    }\n\n    this.containerDomNode = this.getDomNode(containerDomNode)\n    this.sourceDomNode = this.getDomNode(sourceDomNode)\n    this.initialFocusDomNode = initialFocusDomNode\n      ? this.getDomNode(initialFocusDomNode)\n      : this.containerDomNode\n  }\n\n  activate() {\n    this.hideOutsideDomNodes()\n    this.setInitialFocus()\n  }\n\n  deactivate() {\n    this.showOutsideDomNodes()\n    this.setFocusBackToSourceDomNode()\n  }\n\n  setInitialFocus() {\n    this.initialFocusDomNode && this.initialFocusDomNode.focus()\n  }\n\n  setFocusBackToSourceDomNode() {\n    this.sourceDomNode && this.sourceDomNode.focus()\n  }\n\n  gatherOutsideDomNodes(currentElement: HTMLElement | null) {\n    // 1. Start at the current element (begins with the container element).\n    // 2. Hide all sibling elements that are not already aria-hidden.\n    // 3. Go up one level to the parent element.\n    // 4. Repeat steps 2-3 until you reach the `html` element.\n\n    if (!currentElement) {\n      return undefined\n    }\n\n    if (currentElement !== document.querySelector('body')) {\n      const parentElement = currentElement.parentElement\n      if (parentElement !== null) {\n        const siblingElements = [...parentElement.children]\n        siblingElements.forEach((element: Element) => {\n          if (element !== currentElement && !element.getAttribute('inert')) {\n            this.hiddenDomNodes.push(element)\n          }\n        })\n        this.gatherOutsideDomNodes(parentElement)\n      }\n    }\n  }\n\n  hideOutsideDomNodes() {\n    this.gatherOutsideDomNodes(this.containerDomNode)\n    this.hiddenDomNodes.forEach(element =>\n      element.setAttribute('inert', 'true')\n    )\n  }\n\n  showOutsideDomNodes() {\n    this.hiddenDomNodes.forEach(element => element.removeAttribute('inert'))\n    this.hiddenDomNodes = []\n  }\n\n  getDomNode(element: HTMLElement) {\n    return typeof element === 'string'\n      ? document.querySelector(element)\n      : element\n  }\n}\n"],"names":["[object Object]","containerDomNode","sourceDomNode","initialFocusDomNode","Error","this","getDomNode","hideOutsideDomNodes","setInitialFocus","showOutsideDomNodes","setFocusBackToSourceDomNode","focus","currentElement","document","querySelector","parentElement","children","forEach","element","getAttribute","hiddenDomNodes","push","gatherOutsideDomNodes","setAttribute","removeAttribute"],"mappings":"+PACEA,iBACAA,cACAA,oBACAA,eAA4B,GAC5BA,cAA+B,GAE/BA,aAAYC,iBACVA,EAAgBC,cAChBA,EAAaC,oBACbA,IAMA,IAAKF,EACH,MAAM,IAAIG,MAAM,iCAGlB,IAAKF,EACH,MAAM,IAAIE,MAAM,8BAGlBC,KAAKJ,iBAAmBI,KAAKC,WAAWL,GACxCI,KAAKH,cAAgBG,KAAKC,WAAWJ,GACrCG,KAAKF,oBAAsBA,EACvBE,KAAKC,WAAWH,GAChBE,KAAKJ,iBAGXD,WACEK,KAAKE,sBACLF,KAAKG,kBAGPR,aACEK,KAAKI,sBACLJ,KAAKK,8BAGPV,kBACEK,KAAKF,qBAAuBE,KAAKF,oBAAoBQ,QAGvDX,8BACEK,KAAKH,eAAiBG,KAAKH,cAAcS,QAG3CX,sBAAsBY,GAMpB,GAAKA,GAIDA,IAAmBC,SAASC,cAAc,QAAS,CACrD,MAAMC,EAAgBH,EAAeG,cACrC,GAAsB,OAAlBA,EAAwB,CACF,IAAIA,EAAcC,UAC1BC,QAASC,IACnBA,IAAYN,GAAmBM,EAAQC,aAAa,UACtDd,KAAKe,eAAeC,KAAKH,KAG7Bb,KAAKiB,sBAAsBP,KAKjCf,sBACEK,KAAKiB,sBAAsBjB,KAAKJ,kBAChCI,KAAKe,eAAeH,QAAQC,GAC1BA,EAAQK,aAAa,QAAS,SAIlCvB,sBACEK,KAAKe,eAAeH,QAAQC,GAAWA,EAAQM,gBAAgB,UAC/DnB,KAAKe,eAAiB,GAGxBpB,WAAWkB,GACT,MAA0B,iBAAZA,EACVL,SAASC,cAAcI,GACvBA"}